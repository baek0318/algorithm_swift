import Foundation

let n = Int(readLine()!)!
var arr1 = readLine()!.split(separator: " ").map{Int($0)!}
let m = Int(readLine()!)!
var arr2 = readLine()!.split(separator: " ").map{Int($0)!}
arr1.sort()
//자신이 제일 처음 나오는 위치를 반환하는 함수
func lowerFind(num : Int) -> Int {
    var start = 0
    var end = arr1.count-1
    while start<=end {
        let mid = (end+start)/2
        if arr1[mid] >= num {
            end = mid-1
        }else {
            start = mid+1
        }
    }
    return start
}

//자신이 제일 끝에 나오는 위치를 반환하는 함수
func upperFind(num : Int) -> Int {
    var start = 0
    var end = arr1.count-1
    while start<=end {
        let mid = (end+start)/2
        if arr1[mid] <= num {
            start = mid+1
        }else {
            end = mid-1
        }
    }
    return end
}

//upperFind() - lowerFind()를 하면 자신이 존재하는 총갯수가 나오게 된다
for i in arr2 {
    let low = lowerFind(num: i)
    let high = upperFind(num: i)
    print(high - low+1, terminator: " ")
}
print()
